/* LICENSE BEGIN
    This file is part of the SixtyFPS Project -- https://sixtyfps.io
    Copyright (c) 2021 Olivier Goffart <olivier.goffart@sixtyfps.io>
    Copyright (c) 2021 Simon Hausmann <simon.hausmann@sixtyfps.io>

    SPDX-License-Identifier: GPL-3.0-only
    This file is also available under commercial licensing terms.
    Please contact info@sixtyfps.io for more information.
LICENSE END */

export LineEditInner := Rectangle {
    callback accepted(string);
    callback edited(string);
    property<string> placeholder-text;
    property text <=> input.text;
    property placeholder-color <=> placeholder.color;
    property text-color <=> input.color;
    property enabled <=> input.enabled;
    property has-focus <=> input.has-focus;
    min-height: input.preferred-height;
    min-width: 50px;
    clip: true;
    forward-focus: input;
    input := TextInput {
        property <length> computed_x;
        x: min(0px, max(parent.width - width, computed_x));
        width: max(parent.width, preferred-width);
        height: 100%;
        cursor-position-changed(cpos) => {
            if (cpos.x + computed_x < 8px) {
                computed_x = - cpos.x + 8px;
            } else if (cpos.x + computed_x > parent.width - 8px) {
                computed_x = parent.width - cpos.x - 8px;
            }
        }
        accepted => { root.accepted(self.text); }
        edited => { root.edited(self.text); }
        vertical-alignment: center;
        single-line: true;
    }
    placeholder := Text {
        height: 100%; width: 100%;
        vertical-alignment: center;
        color: #ecedeb; // FIXME: use the palette
        text: root.text == "" ? root.placeholder-text : "";
    }
}